class Solution {
    public boolean wordBreak(String s, List<String> wordDict) {
        Set<String> wordSet = new HashSet<>(wordDict);

        int maxLength = 0;
        for(String word : wordDict){
            maxLength = Math.max(maxLength, word.length());
        }

        int n = s.length();
        boolean[] segmentPossibilityArray = new boolean[n+1];

        segmentPossibilityArray[0] = true;

        for (int i = 1; i<=n; i++){
            for (int j=i-1; j >= Math.max(0, i-maxLength); j--){
                if (segmentPossibilityArray[j] && wordSet.contains(s.substring(j,i))){
                    segmentPossibilityArray[i] = true;
                    break;
                }
            }
        }
        return segmentPossibilityArray[n];
    }
}